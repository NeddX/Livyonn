fn Entry(int iterations)
{
    int i = 10;
    i = i * 2 + 100 - 1;
    printline(i);
    return i;
}


// pop %rax                    ; Int iterations 
// mov %rbx, #0                ; Int i
// call l1                     ; While loop body.
// mov %FNR, %RBX              ; Return i
// return                      ; End the function and return whatever's inside FNR register.

// @l1:                        ; Loop body definition.
//     cigt %rax, %rbx         ; i < iterations
//     jrn #4                  ; If i < iterations is true then break.
//     call @printInt          ; Calling printInt(i).
//     add %rbx, #1            ; i = i + 1
//     jmp @l1                 ; Repeat the loop.
//     return                  ; Return back to the caller.

// @printInt:                  ; printInt definition.
//     push %rbx               
//     pint                    
//     return                  ; Return back to the caller. 
